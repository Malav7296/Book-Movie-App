{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91756\\\\Desktop\\\\Upgrad\\\\Frontend\\\\Book Movie App\\\\book-movie-app3\\\\src\\\\screens\\\\home\\\\UpcomingMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport { Fragment } from 'react';\nimport { ImageList, ImageListItem, ImageListItemBar } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)',\n    width: '100%'\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n});\n\nconst UpcomingMovies = props => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const {\n    classes\n  } = props;\n  useEffect(() => {\n    loadUpcomingMovies();\n  }, []);\n\n  async function loadUpcomingMovies() {\n    try {\n      const rawResponse = await fetch(\"http://localhost:8085/api/v1/movies?page=1&limit=6&status=PUBLISHED\", {\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json;charset=UTF-8\",\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      });\n      const result = await rawResponse.json();\n\n      if (rawResponse.ok) {\n        console.log(result.movies);\n        setMovies(result.movies);\n      } else {\n        const error = new Error();\n        error.message = result.message || \"Something went wrong\";\n      }\n    } catch (error) {\n      alert(`Error: ${error.message}`);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ImageList, {\n      cols: 5,\n      className: classes.gridList,\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(ImageListItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster_url,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n          title: movie.title,\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n              className: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, movie.poster_url, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpcomingMovies, \"eVbSZgchb5sqBry+u181adB85X8=\");\n\n_c = UpcomingMovies;\nUpcomingMovies.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(UpcomingMovies);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpcomingMovies\");","map":{"version":3,"names":["React","Component","useEffect","useState","Fragment","ImageList","ImageListItem","ImageListItemBar","IconButton","StarBorderIcon","PropTypes","withStyles","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","width","title","color","primary","light","titleBar","UpcomingMovies","props","movies","setMovies","classes","loadUpcomingMovies","rawResponse","fetch","method","headers","result","json","ok","console","log","error","Error","message","alert","map","movie","poster_url","propTypes","object","isRequired"],"sources":["C:/Users/91756/Desktop/Upgrad/Frontend/Book Movie App/book-movie-app3/src/screens/home/UpcomingMovies.js"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport { Fragment } from 'react';\r\nimport { ImageList , ImageListItem , ImageListItemBar } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        transform: 'translateZ(0)',\r\n        width: '100%'\r\n    },\r\n    title: {\r\n      color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n      background:\r\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n  });\r\n\r\nconst UpcomingMovies = (props) => {\r\n\r\n    const [movies , setMovies] = useState([]);\r\n    const { classes } = props;\r\n\r\n    useEffect(()=>{\r\n        loadUpcomingMovies()\r\n    },[])\r\n\r\n    async function loadUpcomingMovies(){\r\n        try {\r\n        \r\n            const rawResponse = await fetch(\"http://localhost:8085/api/v1/movies?page=1&limit=6&status=PUBLISHED\",{\r\n                method:\"GET\",\r\n                headers:{\r\n                    \"Accept\" : \"application/json;charset=UTF-8\",\r\n                    'Content-Type' : 'application/json;charset=UTF-8'\r\n                }\r\n            })\r\n    \r\n            const result = await rawResponse.json()\r\n            \r\n            \r\n            if(rawResponse.ok){\r\n                console.log(result.movies)\r\n                setMovies(result.movies)\r\n            }else{\r\n                const error = new Error();\r\n                error.message = result.message || \"Something went wrong\"\r\n            }\r\n            \r\n        } catch (error) {\r\n            alert(`Error: ${error.message}`)\r\n            \r\n        }\r\n    \r\n\r\n    }\r\n    \r\n\r\n    return(\r\n        \r\n        <Fragment>\r\n            <ImageList cols={5} className={classes.gridList}>\r\n                {movies.map(movie => (\r\n                <ImageListItem key={movie.poster_url}>\r\n                    <img src={movie.poster_url} alt={movie.title} />\r\n                    <ImageListItemBar\r\n                    title={movie.title}\r\n                    actionIcon={\r\n                        <IconButton>\r\n                        <StarBorderIcon className={movie.title} />\r\n                        </IconButton>\r\n                    }\r\n                    />\r\n                </ImageListItem>\r\n                ))}\r\n            </ImageList>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nUpcomingMovies.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\nexport default withStyles(styles)(UpcomingMovies);"],"mappings":"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"},"metadata":{},"sourceType":"module"}